.home {
  background: radial-gradient(#525252, #131313);
}
.nav-container {
  background: rgb(17, 17, 17);
}
//boa navbar! Atenção ao nav que ele criou dentro para que o logo ficasse por detras do background preto
nav {
  // a width e o margin auto é para dar margem de 10% nos lados.
  // Se o background do nav-container fosse posto aqui, o sobrante espaço ia ficar branco..
  width: 80%;
  margin: auto;
  min-height: 10vh;
  padding: 3rem 0rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  //flex no ul e no logo faz com que os 3 items (2 li + logo) fiquem evenly spaced - com spacearound
  ul {
    display: flex;
    // para que as margens fiquem todas alinhadas (com 10% de espaço à volta de ambas
    // usas o space-between
    justify-content: space-between;
    //usando o total do espaço disponivel (já om os 80% da with da nav
    flex: 1;
    // get rid of the dots
    list-style: none;
  }
  #logo {
    // usando 3/4 do espaço disponivel - faz shrink no flex do ul e passa a contemplar so 3/4
    flex: 3;
    position: relative;
    // para adicionar coisas no CSS, sem usar o HTML
    &::after {
      content: " ";
      position: absolute;
      top: 0;
      left: 0;
      width: 6rem;
      height: 6rem;
      background: #f54538;
      border-radius: 50%;
      transform: translate(-10%, -20%);
      //é tipo z-index, neste caso coloca o red background atras do letring(logo)
      mix-blend-mode: screen;
    }
  }
  //styiling Order button
  .order {
    background: #f54538;
    padding: 1rem 2rem;
    border-radius: 2rem;
  }
}
.showcase {
  display: grid;
  min-height: 90vh;
  // grid-template-columns: 10% repeat(3, minmax(5rem, 1fr));
  grid-template-columns: 10% repeat(3, 1fr) 10%;
  // 2fr para o centro ser maior, 1fr para os lados
  grid-template-rows: 1fr 2fr 1fr;

  h2 {
    grid-column: 2/3;
    align-self: flex-end;
  }
  img {
    grid-row: 2/3;
    grid-column: 3/4;
    height: 120%;
    // fixes the object in its Grid position.
    object-fit: cover;
    // align and justify center does fix the object in the centera
    align-self: center;
    justify-self: center;
  }
  .info {
    grid-row: 3/4;
    grid-column: 4/5;
    h3 {
      padding-bottom: 3rem;
    }
  }
}
